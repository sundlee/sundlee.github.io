---
layout: post
title:  "float 말고 inline-block 으로 그리드 레이아웃 디자인하기 from dhpark"
date:   2016-12-22 12:00:00
categories: css3
---


주로 그리드 레이아웃을 디자인할 때 `float` 를 많이 사용하는데 `float` 로 그리드를 짜게 되면
끝에 `clear` 속성도 따로 지정해줘야 하고 여간 귀찮고 복잡한 게 아니다. 그래서 이번 포스트에서는
`inline-block` 으로 그리드 레이아웃을 디자인하는 법을 알아보자.


```html
<div class="container">
  <div class="grid"></div>
  <div class="grid"></div>
  <div class="grid"></div>
  <div class="grid"></div>
  <div class="grid"></div>
</div>
```


컨테이너 태그 안에 그리드를 나눌 태그들을 설정하고 우선 `.grid` 클래스를 가지는 태그에
`display: inline-block ;` 속성을 준다. 그런 다음 내부 블록들이 컨테이너 태그의
상단에 고정될 수 있게 `vertical-align: top ; ` 속성을 주면 내부 정렬은 끝이 난다.


```css
.container div {
  display: inline-block ;
  vertical-align: top ;
}
```


위 `css` 를 적용하면 얼핏 끝난 것처럼 보이지만 자세히 보면 그리드 사이에 약간의 틈이 존재하게 된다.
지난 번처럼 컨테이너 태그에 `font-size: 0 ;` 속성을 주기만 하면 그리드 사이의 간격이 없어져
더욱 디테일한 그리드 레이아웃을 구현할 수 있다.


```css
.container {
  font-size: 0 ;
}
```


<pre data-height="300" data-theme-id="0" data-slug-hash="jVRPgy" data-default-tab="result" data-user="dhpark" data-embed-version="2" data-pen-title="grid-by-inline-block" class="codepen">See the Pen <a href="http://codepen.io/dhpark/pen/jVRPgy/">grid-by-inline-block</a> by dhpark (<a href="http://codepen.io/dhpark">@dhpark</a>) on <a href="http://codepen.io">CodePen</a>.</pre>
<script src="https://production-assets.codepen.io/assets/embed/ei.js"></script>
